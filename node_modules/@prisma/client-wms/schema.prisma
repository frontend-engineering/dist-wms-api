// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-wms"
}

generator dbml {
  provider = "npx prisma-dbml-generator"
}

generator zod {
  provider                  = "node ../../node_modules/zod-prisma-types/dist/bin.js" // npx zod-prisma-types 如果无法生成可以改成 node ../../node_modules/zod-prisma-types/dist/bin.js 会有错误堆栈
  createModelTypes          = true
  createInputTypes          = false
  addInputTypeValidation    = false
  addIncludeType            = true
  addSelectType             = false
  coerceDate                = false
  createRelationValuesTypes = true
  output                    = "../../../libs/prisma-wms/src/zod"
  prismaClientPath          = "@prisma/client-wms"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // 用的不是很熟
  // relationMode = "prisma"
}

/// @schema.display_name 节点和表单关联关系
model TaskFormRelation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  taskDefinitionKey String @unique
  formKey           String
}

/// @schema.display_name 员工
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  username           String
  hashedPassword     String?
  hashedRefreshToken String?
  status             UserStatus
  role               UserGroup  @default(USER)

  profile UserProfile?

  incomingInspectedRecords IncomingInspectRecord[]  @relation("IncomingInspected")
  incomingReviewedRecords  IncomingInspectRecord[]  @relation("IncomingReviewed")
  inProcessInspectedRecord InProcessInspectRecord[] @relation("InProcessInspected")
  inProcessReviewedRecord  InProcessInspectRecord[] @relation("InProcessReviewed")
}

// user -> user profile 1-1
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations
// 主要关注点：选择那一侧是可选的
model UserProfile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  fullName String
}

enum UserStatus {
  ACTIVE // 激活
  FORBIDDEN // 禁用
}

enum UserGroup {
  ADMIN
  USER
}

/// @schema.primary_key id
/// @schema.display_name 产线
/// @schema.display_column name
model ProductLine {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 产线名
  name        String
  /// @schema.title 产线描述
  description String?

  /// @schema.model_name Equipment
  equipment Equipment[]
}

/// @schema.primary_key id
/// @schema.display_name 设备
/// @schema.display_column name
model Equipment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 设备名
  name         String
  /// @schema.title 设备描述
  description  String?
  /// @schema.title 购买日期
  purchaseDate DateTime

  // 设备可以没有维修计划
  plan RepairPlan?

  // 多个维修记录
  records RepairRecord[]

  /// @schema.reference ProductLine
  productLineId Int?
  productLine   ProductLine? @relation(fields: [productLineId], references: [id])
}

/// @schema.primary_key id
/// @schema.display_name 备品备料
/// @schema.display_column name
model RepairMaterial {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 物料名
  name        String
  /// @schema.title 物料描述
  description String?

  // 可以没有物料库存信息
  /// @schema.reference RepairMaterialInventory
  inventory RepairMaterialInventory?
}

/// @schema.primary_key id
/// @schema.display_name 保养计划
model RepairPlan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 计划描述
  description String?

  // 但是维修计划必选设备
  /// @schema.reference Equipment
  equimentId Int       @unique
  equipment  Equipment @relation(fields: [equimentId], references: [id])
}

/// @schema.primary_key id
/// @schema.display_name 备品备料库存
model RepairMaterialInventory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  // 但是维修计划必选设备
  /// @schema.reference RepairMaterial
  materialId     Int            @unique
  // 约定名字必须是 model_name 的 lower first case
  repairMaterial RepairMaterial @relation(fields: [materialId], references: [id])

  /// @schema.title 数量
  quantity Int
}

/// @schema.primary_key id
/// @schema.display_name 维修记录
model RepairRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference Equipment
  equimentId Int
  equipment  Equipment @relation(fields: [equimentId], references: [id])

  /// @schema.title 备注
  description String?

  /// @schema.title 状态
  status RepairRecordStatus?

  /// @schema.title 类型
  type RepairType
}

enum RepairRecordStatus {
  TO_ASSIGN
  DOING
  TO_REVIEW
  DONE
}

enum RepairType {
  SCHEDULE // 计划性
  UNSCHEDULE // 非计划
}

/// @schema.primary_key id
/// @schema.display_name 物料
/// @schema.display_column name
model Material {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 物料名
  name        String
  /// @schema.title 物料描述
  description String?

  // 物料关联的规格
  specs MaterialSpec[]

  // 物料关联的工序
  operations             Operation[]
  incomingInspectRecord  IncomingInspectRecord[]
  inProcessInspectRecord InProcessInspectRecord[]
}

/// @schema.primary_key id
/// @schema.display_name 物料规格
model MaterialSpec {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 规格名
  name        String
  /// @schema.title 规格描述
  description String?

  /// @schema.reference Material
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  inspects MaterialSpecInspect[]
}

/// @schema.primary_key id
/// @schema.display_name 工序
/// @schema.display_column name
model Operation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 工序名
  name        String
  /// @schema.title 工序描述
  description String?

  /// @schema.reference Material
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  specs OperationSpec[]
}

/// @schema.primary_key id
/// @schema.display_name 工序规格
model OperationSpec {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 规格名
  name        String
  /// @schema.title 规格描述
  description String?

  /// @schema.reference Operation
  operationId Int
  operation   Operation              @relation(fields: [operationId], references: [id])
  inspect     OperationSpecInspect[]
}

/// @schema.primary_key id
/// @schema.display_name 进料检记录
model IncomingInspectRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 零件批号
  lot String @unique

  /// @schema.reference Material
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  /// @schema.title 备注
  description String?

  details MaterialSpecInspect[]

  inspector   User? @relation("IncomingInspected", fields: [inspectorId], references: [id])
  inspectorId Int

  reviewer   User? @relation("IncomingReviewed", fields: [reviewerId], references: [id])
  reviewerId Int

  /// @schema.title 判定
  result IncomingInspectResult
}

enum IncomingInspectResult {
  ACCEPT
  RETURN
  DOWNGRADE
}

/// @schema.primary_key id
/// @schema.display_name 进料检记录详情
model MaterialSpecInspect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  record   IncomingInspectRecord @relation(fields: [recordId], references: [id])
  recordId Int

  spec   MaterialSpec @relation(fields: [specId], references: [id])
  specId Int

  /// @schema.title 备注
  description String?

  /// @schema.title 结果
  result Boolean
}

/// @schema.primary_key id
/// @schema.display_name 过程检记录
model InProcessInspectRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 生产批号
  lot         String  @unique
  /// @schema.title 备注
  description String?

  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  inspector   User? @relation("InProcessInspected", fields: [inspectorId], references: [id])
  inspectorId Int

  reviewer   User? @relation("InProcessReviewed", fields: [reviewerId], references: [id])
  reviewerId Int
}

/// @schema.primary_key id
/// @schema.display_name 过程检记录
model OperationSpecInspect {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  spec   OperationSpec @relation(fields: [specId], references: [id])
  specId Int

  /// @schema.title 首检
  first     String
  /// @schema.title 过程检
  inProcess String
  /// @schema.title 末检
  final     String
}
