// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../../../node_modules/@prisma/client-wms"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator dbml {
  provider = "npx prisma-dbml-generator"
}

generator zod {
  provider                  = "node ../../node_modules/zod-prisma-types/dist/bin.js" // npx zod-prisma-types 如果无法生成可以改成 node ../../node_modules/zod-prisma-types/dist/bin.js 会有错误堆栈
  createModelTypes          = true
  createInputTypes          = false
  addInputTypeValidation    = false
  addIncludeType            = true
  addSelectType             = false
  coerceDate                = false
  createRelationValuesTypes = true
  output                    = "../../../libs/prisma-wms/src/zod"
  prismaClientPath          = "@prisma/client-wms"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // 用的不是很熟
  // relationMode = "prisma"
}

/// @schema.display_name 节点和表单关联关系
model TaskFormRelation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  taskDefinitionKey String @unique
  formKey           String
}

/// @schema.display_name 表和查询条件的关系
model TableFilter {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  path       String
  name       String
  filterJSON String
}

/// @schema.display_name 员工
/// @schema.display_column username
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  username           String
  hashedPassword     String?
  hashedRefreshToken String?
  status             UserStatus
  role               UserGroup  @default(USER)

  profile UserProfile?

  // reviewedOperationInspectionRecords  OperationInspectionRecord[] @relation("OperationInspector")
  // inspectedOperationInspectionRecords OperationInspectionRecord[] @relation("OperationReviewer")
}

// user -> user profile 1-1
// https://www.prisma.io/docs/concepts/components/prisma-schema/relations/one-to-one-relations
// 主要关注点：选择那一侧是可选的
model UserProfile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  fullName String
}

enum UserStatus {
  ACTIVE // 激活
  FORBIDDEN // 禁用
}

enum UserGroup {
  ADMIN
  USER
}

/// @schema.primary_key id
/// @schema.display_name 产线
/// @schema.display_column name
model ProductLine {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 产线名
  name        String
  /// @schema.title 产线描述
  /// @schema.column_type textarea
  description String

  /// @schema.model_name Equipment
  equipment Equipment[]
}

/// @schema.primary_key id
/// @schema.display_name 设备
/// @schema.display_column name
model Equipment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 设备名
  name        String
  /// @schema.title 设备描述
  /// @schema.column_type textarea
  description String

  /// @schema.title 维修计划
  /// @schema.column_type cron
  repairPlan String

  /// @schema.title 工位
  workStation String

  /// @schema.reference ProductLine
  productLineId Int
  productLine   ProductLine @relation(fields: [productLineId], references: [id])

  /// @schema.model_name RepairMaterialInventory
  repairMaterialInventories RepairMaterialInventory[]

  // 多个维修记录
  /// @schema.model_name RepairRecord
  repairRecords RepairRecord[]
}

/// @schema.primary_key id
/// @schema.display_name 备品备料库存
/// @schema.display_column name
model RepairMaterialInventory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 物料名
  name        String
  /// @schema.title 物料描述
  /// @schema.column_type textarea
  description String

  /// @schema.title 库存数量
  quantity Int

  /// @schema.title 最小库存数量
  minimumQuantity Int

  /// @schema.reference Equipment
  equipmentId Int?
  equipment   Equipment? @relation(fields: [equipmentId], references: [id])
}

/// @schema.primary_key id
// https://stackoverflow.com/questions/66465888/how-to-define-enum-mapping-in-openapi
/// @schema.display_name 维修记录
/// @schema.display_column equipmentId
model RepairRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 类型
  type RepairType

  /// @schema.reference Equipment
  /// @schema.x-relationField equipment
  equipmentId Int
  equipment   Equipment @relation(fields: [equipmentId], references: [id])

  /// @schema.title 状态
  status RepairRecordStatus

  /// @schema.title 备注
  /// @schema.column_type textarea
  description String
}

/// @schema.x-enumNames 待分配,维修中,待审核,维修完成
enum RepairRecordStatus {
  TO_ASSIGN
  DOING
  TO_REVIEW
  DONE
}

/// @schema.x-enumNames 保养,维修
enum RepairType {
  SCHEDULE // 计划性
  UNSCHEDULE // 非计划
}

/// @schema.display_name 零件
/// @schema.display_column name,no
model Part {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)
  /// @schema.title 零件号
  no        String
  /// @schema.title 零件名称
  name      String

  /// @schema.title 类型
  partType PartType

  /// @schema.model_name PartVersion
  partVersions    PartVersion[]
  /// @schema.model_name PartOperation
  partOperation   PartOperation[]
  /// @schema.model_name WorkerOrder
  workerOrders    WorkerOrder[]
  /// @schema.model_name NonconformItem
  nonconformItems NonconformItem[]
}

/// @schema.x-enumNames 成品,物料
enum PartType {
  Product
  Material
}

/// @schema.display_name 零件版本
/// @schema.display_column partId,version
model PartVersion {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 版本号
  version String

  /// @schema.reference Part
  partId Int
  part   Part @relation(fields: [partId], references: [id])

  /// @schema.reference IncomingInspectionSpec
  incomingInspectionSpec IncomingInspectionSpec?

  /// @schema.title 备注
  note    String?

  /// @schema.model_name Receipt
  receipts Receipt[]
}

/// @schema.display_name 进料检验规范
/// @schema.display_column partVersionId
model IncomingInspectionSpec {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 版本编号
  version String
  // /// @schema.title 附件
  // attachment String

  /// @schema.model_name IncomingInspectionSpecItem
  incomingInspectionSpecItems IncomingInspectionSpecItem[]
  /// @schema.model_name IncomingInspectionRecord
  incomingInspectionRecords   IncomingInspectionRecord[]

  // 零件版本
  /// @schema.reference PartVersion
  /// @schema.x-unique true
  partVersionId Int         @unique
  partVersion   PartVersion @relation(fields: [partVersionId], references: [id])
}

/// @schema.display_name 检验项目
/// @schema.display_column no,name
/// @schema.display_primary_key false
model IncomingInspectionSpecItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 序号
  no   Int
  /// @schema.title 检验项目
  name String
  /// @schema.title 规格
  spec String

  /// @schema.reference IncomingInspectionSpec
  incomingInspectionSpecId Int
  incomingInspectionSpec   IncomingInspectionSpec @relation(fields: [incomingInspectionSpecId], references: [id])

  /// @schema.model_name IncomingInspectionRecordItem
  incomingInspectionRecordItems IncomingInspectionRecordItem[]
}

/// @schema.display_name 不合格品记录
// 支持 reference
/// @schema.display_column partId
// https://en.wikipedia.org/wiki/Nonconformity_(quality)
model NonconformItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference Part
  partId Int
  part   Part @relation(fields: [partId], references: [id])

  /// @schema.title 不良描述
  description String

  /// @schema.title 备注
  note String?
}

/// @schema.display_name 总成工序
/// @schema.display_column no
model PartOperation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 工序号
  no String

  /// @schema.reference Part
  partId Int
  part   Part @relation(fields: [partId], references: [id])

  /// @schema.model_name PartOperationVersion
  partOperationVersions PartOperationVersion[]
}

/// @schema.display_name 总成工序版本
/// @schema.display_column partOperationId,name,version
model PartOperationVersion {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 版本号
  version Int
  /// @schema.title 工序名称
  name    String

  /// @schema.reference PartOperation
  partOperationId Int
  partOperation   PartOperation @relation(fields: [partOperationId], references: [id])

  /// @schema.model_name PartOperationInspectionItem
  partOperationInspectionItems PartOperationInspectionItem[]

  /// @schema.model_name OperationInspectionRecord
  operationInspectionRecord OperationInspectionRecord[]
}

/// @schema.display_name 零件过程检验项目
/// @schema.display_column name
model PartOperationInspectionItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 检验项目
  name String

  /// @schema.reference PartOperationVersion
  partOperationVersionId Int
  partOperationVersion   PartOperationVersion @relation(fields: [partOperationVersionId], references: [id])

  /// @schema.model_name OperationInspectionRecordItem
  operationInspectionRecordItems OperationInspectionRecordItem[]
}

/// @schema.display_name 收货单
/// @schema.display_column partVersionId,lot
model Receipt {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference PartVersion
  partVersionId Int
  partVersion   PartVersion @relation(fields: [partVersionId], references: [id])

  /// @schema.title 零件批号
  lot String

  /// @schema.reference IncomingInspectionRecord
  incomingInspectionRecord IncomingInspectionRecord?
}

/// @schema.display_name 进料检记录
/// @schema.display_column receiptId
model IncomingInspectionRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference Receipt
  /// @schema.x-unique true
  receiptId Int     @unique
  receipt   Receipt @relation(fields: [receiptId], references: [id])

  /// @schema.title 判定
  result IncomingInspectionResult?

  /// @schema.reference IncomingInspectionSpec
  incomingInspectionSpecId Int
  incomingInspectionSpec   IncomingInspectionSpec @relation(fields: [incomingInspectionSpecId], references: [id])

  /// @schema.title 备注
  note String?

  /// @schema.model_name IncomingInspectionRecordItem
  incomingInspectionRecordItems IncomingInspectionRecordItem[]
}

/// @schema.x-enumNames 接收,拒收,让步接收
enum IncomingInspectionResult {
  Pass
  Reject
  Downgrade
}

/// @schema.display_name 进料检记录详情
/// @schema.display_primary_key false
/// @schema.display_column incomingInspectionSpecItemId
model IncomingInspectionRecordItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference IncomingInspectionRecord
  incomingInspectionRecordId Int
  incomingInspectionRecord   IncomingInspectionRecord @relation(fields: [incomingInspectionRecordId], references: [id])

  /// @schema.reference IncomingInspectionSpecItem
  incomingInspectionSpecItemId Int
  incomingInspectionSpecItem   IncomingInspectionSpecItem @relation(fields: [incomingInspectionSpecItemId], references: [id])

  /// @schema.title 测量#
  inspectionIteration String
  /// @schema.title 结果
  result              Boolean @default(false)
}

/// @schema.display_name 工单
/// @schema.display_column no
model WorkerOrder {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.title 工单号
  no     String
  /// @schema.reference Part
  partId Int
  part   Part   @relation(fields: [partId], references: [id])

  /// @schema.model_name OperationInspectionRecord
  operationInspectionRecords OperationInspectionRecord[]

  /// @schema.title 检验员
  inspectorName String?
  /// @schema.title 审核员
  reviewerName  String?
}

/// @schema.display_name 过程检
/// @schema.display_column workerOrderId
model OperationInspectionRecord {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference WorkerOrder
  workerOrderId Int
  workerOrder   WorkerOrder @relation(fields: [workerOrderId], references: [id])

  /// @schema.reference PartOperationVersion
  partOperationVersionId Int
  partOperationVersion   PartOperationVersion @relation(fields: [partOperationVersionId], references: [id])

  /// @schema.title 备注
  note String?

  // /// @schema.reference User
  // /// @schema.x-relationField inspector
  // /// @schema.display_name 检验员
  // inspectorId Int
  // inspector   User @relation("OperationInspector", fields: [inspectorId], references: [id])

  // /// @schema.reference User
  // /// @schema.x-relationField reviewer
  // /// @schema.display_name 审核员
  // reviewerId Int
  // reviewer   User @relation("OperationReviewer", fields: [reviewerId], references: [id])

  /// @schema.model_name OperationInspectionRecordItem
  operationInspectionRecordItems OperationInspectionRecordItem[]
}

/// @schema.display_name 过程检详情
model OperationInspectionRecordItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  isDeleted Boolean  @default(false)

  /// @schema.reference PartOperationInspectionItem
  partOperationInspectionItemId Int
  partOperationInspectionItem   PartOperationInspectionItem @relation(fields: [partOperationInspectionItemId], references: [id])

  /// @schema.reference OperationInspectionRecord
  operationInspectionRecordId Int
  operationInspectionRecord   OperationInspectionRecord @relation(fields: [operationInspectionRecordId], references: [id])

  /// @schema.title 首检#
  inspectionIteration1 String
  /// @schema.title 过程检1#
  inspectionIteration2 String
  /// @schema.title 过程检2#
  inspectionIteration3 String
  /// @schema.title 末检#
  inspectionIteration4 String
}
