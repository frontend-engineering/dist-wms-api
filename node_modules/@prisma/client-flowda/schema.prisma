// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-flowda"
}

generator dbml {
  provider = "npx prisma-dbml-generator"
}

generator zod {
  provider                  = "node ../../node_modules/zod-prisma-types/dist/bin.js" // npx zod-prisma-types 如果无法生成可以改成 node ../../node_modules/zod-prisma-types/dist/bin.js 会有错误堆栈
  createModelTypes          = true
  createInputTypes          = false
  addInputTypeValidation    = false
  addIncludeType            = true
  addSelectType             = false
  coerceDate                = false
  createRelationValuesTypes = true
  output                    = "../../../libs/flowda-types/src/zod"
  prismaClientPath          = "@prisma/client-flowda"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// @schema.primary_key id
/// @schema.display_name 订单
/// @schema.display_primary_key true
model Order {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  serial           Int
  status           OrderStatus
  // Customer 1-n Order
  customer         Customer          @relation(fields: [customerId], references: [id])
  /// @schema.reference Customer
  customerId       String
  // Order 1-1 Pay? 这里必须?，Pay 里写上 order + orderId @unique
  pay              Pay?
  // Order 1-n ProductSnapshot，ProductSnapshot 写 order + orderId 不用 unique
  productSnapshots ProductSnapshot[]

  appId     String   @default("NULL")
  isDeleted Boolean? @default(false)
  tenantId  String   @default("clib7r3fq0000pe01lswzxr0x")
  App       App      @relation(fields: [appId], references: [id])
}

/// @schema.primary_key id
/// @schema.searchable_columns name,displayName,description
/// @schema.display_column displayName
/// @schema.display_name 应用
/// @schema.display_primary_key true
model App {
  id                 String    @id @default(cuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now()) @updatedAt
  /// @schema.title 应用id
  /// @schema.access_type read_only
  name               String    @unique
  hashedAppToken     String? // 对称加密存储，新增字段，后续有效
  hashedPassword     String
  hashedRefreshToken String?
  recoveryCode       String?
  recoveryToken      String?   @db.VarChar(200)
  /// @schema.title 应用名
  displayName        String
  /// @schema.title 应用描述
  description        String?
  isDeleted          Boolean?  @default(false)
  /// @schema.model_name Product
  /// @schema.foreign_key appId
  /// @schema.primary_key id
  /// @schema.title Products
  products           Product[]

  /// @schema.model_name Customer
  /// @schema.foreign_key appId
  /// @schema.primary_key id
  /// @schema.title Customers
  customers Customer[]
  /// @schema.model_name Order
  /// @schema.foreign_key appId
  /// @schema.primary_key id
  /// @schema.title Orders
  orders    Order[]
  tenantId String     @default("clib7r3fq0000pe01lswzxr0x")
  tenant   Tenant?    @relation(fields: [tenantId], references: [id])
}

/// @schema.primary_key id
/// @schema.searchable_columns id,name
/// @schema.display_name 产品
/// @schema.display_column name
model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  /// @schema.title 产品名
  name      String
  /// @schema.title 价格
  /// @schema.override_type integer
  price     Decimal

  productType ProductType @default(PLAN)
  plan        Int?
  /// @schema.title 额度
  amount      Int?

  extendedDescriptionData Json?
  fileSize                String? // 单文件大小上限
  storeDuration           Int? // 存储时长，单位月
  /// @schema.title 广告
  hasAds                  String? // 是否有广告
  /// @schema.title 技术支持
  tecSupport              String?
  /// @schema.model_name ProductSnapshot
  /// @schema.foreign_key productId
  /// @schema.primary_key id
  productSnapshots        ProductSnapshot[] // 先手动定义，确保前端链路通，后面再看直接解析 prisma
  /// @schema.title 有效期/天
  validityPeriod          Int?

  /// @schema.model_name App
  /// @schema.foreign_key appId
  /// @schema.primary_key id
  app       App      @relation(fields: [appId], references: [id])
  /// @schema.access_type read_only
  appId     String
  isDeleted Boolean? @default(false)
  tenantId  String   @default("clib7r3fq0000pe01lswzxr0x")

  restricted Int @default(0) // 是否限购，默认0为不限购
}

model Pay {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  status        PayStatus @default(UNPAIED)
  Order         Order     @relation(fields: [orderId], references: [id])
  orderId       String    @unique
  transactionId String
  tenantId      String    @default("clib7r3fq0000pe01lswzxr0x")
}

/// @schema.primary_key id
/// @schema.display_name 用户
/// @schema.display_column name
model Customer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  /// @schema.title 用户名
  name      String   @unique
  /// @schema.access_type read_only
  appId     String
  app       App      @relation(fields: [appId], references: [id])

  /// @schema.title 邮箱
  email              String?
  hashedPassword     String?
  hashedRefreshToken String?
  recoveryCode       String?
  recoveryToken      String?  @db.VarChar(200)
  isDeleted          Boolean? @default(false)

  /// @schema.model_name Order
  /// @schema.foreign_key customerId
  /// @schema.primary_key id
  /// @schema.title Orders
  orders        Order[]
  legacyProfile LegacyProfile?
  /// @schema.reference Profile
  profile       Profile?
  /// @schema.reference WeixinProfile
  weixinProfile WeixinProfile?
  tenantId      String         @default("clib7r3fq0000pe01lswzxr0x")
}

/// @schema.primary_key id
/// @schema.display_name 微信用户信息
/// @schema.display_column nickname
model WeixinProfile {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  unionid     String?
  loginOpenid String

  headimgurl String
  nickname   String
  sex        Int

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @unique
  tenantId   String   @default("clib7r3fq0000pe01lswzxr0x")
}

/// @schema.primary_key id
/// @schema.display_name 用户信息
/// @schema.display_column productType
model Profile {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @unique

  productType ProductType @default(PLAN)
  plan        Int?
  amount      Int? // 额度description
  expireAt    DateTime?
  tenantId    String      @default("clib7r3fq0000pe01lswzxr0x")
}

model customerPreSignup {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  email      String
  verifyCode String
  appId      String
  tenantId   String   @default("clib7r3fq0000pe01lswzxr0x")
}

// 需要废弃，第一期做 license 用的，即不需要用户登录。第二期改成了用户系统
model LegacyProfile {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  customer     Customer @relation(fields: [customerId], references: [id])
  customerId   String   @unique
  license      String
  refreshToken String   @db.VarChar(600)
}

model ProductSnapshot {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  snapshotPrice Decimal
  order         Order    @relation(fields: [orderId], references: [id])
  orderId       String
  product       Product  @relation(fields: [productId], references: [id])
  productId     String
  tenantId      String   @default("clib7r3fq0000pe01lswzxr0x")
}

enum OrderStatus {
  INITIALIZED
  PAY_ASSOCIATED
  FREE_DEAL
  CANCELED
}

enum PayStatus {
  UNPAIED
  PAIED
  REFUND
}

enum ProductType {
  AMOUNT
  PLAN
}

model JYProfile {
  id         String        @id @unique @default(cuid())
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now()) @updatedAt
  userId     String
  articles   Article[]
  freeCounts JYFreeCount[]
}

model JYFreeCount {
  id        String    @id @unique @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  cycle     Int
  count     Int
  profile   JYProfile @relation(fields: [profileId], references: [id])
  profileId String
}

model Article {
  id        String    @id @unique @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  link      String
  source    String?
  title     String?
  image     String?
  excerpt   String?   @db.VarChar(412)
  profile   JYProfile @relation(fields: [profileId], references: [id])
  profileId String
}

model Tenant {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt
  name               String
  email              String
  hashedPassword     String
  hashedRefreshToken String?
  recoveryCode       String?
  recoveryToken      String?  @db.VarChar(200)
  role               String?
  App                App[]
}

model TenantPreSignup {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  email      String
  verifyCode String
}

model Question {
  id        String   @id @unique @default(cuid())
  uid       String
  question  String?  @db.VarChar(2048)
  answer    String?  @db.VarChar(2048)
  success   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
