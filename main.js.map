{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;AAAA,uDAAsD;AAEtD,qFAA8D;AAGvD,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YAA6B,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAG7D,EAAE;QACA,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE;IACxB,CAAC;IAGD,SAAS;QACP,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;IACvC,CAAC;CACF;AATC;IAAC,gBAAG,EAAC,OAAO,CAAC;;;;uCAGZ;AAED;IAAC,iBAAI,EAAC,YAAY,CAAC;;;;8CAGlB;AAXU,aAAa;IADzB,uBAAU,EAAC,OAAO,CAAC;iEAE0B,6BAAa,oBAAb,6BAAa;GAD9C,aAAa,CAYzB;AAZY,sCAAa;;;;;;;;;;;;ACL1B,uDAAuC;AAEvC,4EAAgD;AAChD,mFAA4D;AAC5D,qFAA+D;AAC/D,8EAAkD;AAClD,+EAAwD;AACxD,qFAA8D;AAOvD,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,SAAS;IALrB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,gCAAc,CAAC;QACzB,WAAW,EAAE,CAAC,8BAAa,EAAE,8BAAc,EAAE,gCAAc,EAAE,gCAAc,CAAC;QAC5E,SAAS,EAAE,CAAC,sCAAiB,CAAC;KAC/B,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;;;ACdtB,uDAAmE;AACnE,mFAA2D;AAGpD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAGzD,WAAW,CAAkB,MAAc;QACzC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;IACrC,CAAC;IAGD,YAAY,CAAkB,MAAc,EAAU,IAAS;QAC7D,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;IAChD,CAAC;CACF;AATC;IAAC,gBAAG,EAAC,eAAe,CAAC;IACR,qCAAK,EAAC,QAAQ,CAAC;;;;iDAE3B;AAED;IAAC,iBAAI,EAAC,mBAAmB,CAAC;IACZ,qCAAK,EAAC,QAAQ,CAAC;IAAkB,oCAAI,GAAE;;;;kDAEpD;AAXU,cAAc;IAD1B,uBAAU,EAAC,QAAQ,CAAC;iEAEuB,0BAAW,oBAAX,0BAAW;GAD1C,cAAc,CAY1B;AAZY,wCAAc;;;;;;;;;;;ACH3B,qFAAmE;AACnE,mFAAgE;AAChE,+DAAiD;AACjD,qFAAmE;AACnE,+FAA4E;AAE5E,MAAM,MAAM,GAAG,IAAI,yBAAY,EAAE;AAEjC,SAAgB,UAAU,CAAC,SAA+B;IACxD,SAAS,CAAC,IAAI,CAAe,kCAAkB,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC;IAExE,SAAS,CAAC,IAAI,CAAC,2CAAsB,CAAC;IACtC,SAAS,CAAC,IAAI,CAAC,kCAAkB,CAAC;IAClC,SAAS,CAAC,IAAI,CAAC,+BAAgB,CAAC;AAClC,CAAC;AAND,gCAMC;;;;;;;;;;;;ACfD,uDAA+C;AAC/C,qDAAqC;AACrC,qFAA4D;AAC5D,gEAA0C;AAE7B,yBAAiB,GAAG,IAAI,qBAAS,EAAE;AAChD,2BAAU,EAAC,yBAAiB,CAAC;AAE7B,MAAM,QAAQ,GAAG,+BAAW,EAAC,yBAAiB,CAAC;AAOxC,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,gBAAe,CAAC;CACjB;AAFY,cAAc;IAL1B,mBAAM,GAAE;IACR,mBAAM,EAAC;QACN,SAAS,EAAE,QAAQ;QACnB,OAAO,EAAE,QAAQ;KAClB,CAAC;;GACW,cAAc,CAE1B;AAFY,wCAAc;;;;;;;;;;;;;ACf3B,uDAAqF;AACrF,uFAA0D;AAC1D,mFAAwE;AACxE,uDAA8C;AAGvC,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAI5C,QAAQ,CAAS,GAAgB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnC,CAAC;IAID,KAAK,CAAY,GAAG;QAClB,OAAO,GAAG,CAAC,IAAI;IACjB,CAAC;IAED,iCAAiC;IAEjC,MAAM,CAAY,GAAG;QACnB,cAAc;QACd,sBAAsB;QACtB,yCAAyC;QACzC,OAAO;YACL,OAAO,EAAE,IAAI;SACd;IACH,CAAC;CACF;AAtBC;IAAC,iBAAI,EAAC,UAAU,CAAC;IAChB,qBAAQ,EAAC,8BAAiB,CAAC;IAClB,oCAAI,GAAE;;iEAAM,0BAAW,oBAAX,0BAAW;;8CAEhC;AAED;IAAC,sBAAS,EAAC,wCAAkB,CAAC;IAC7B,iBAAI,EAAC,OAAO,CAAC;IACP,uCAAO,GAAE;;;;2CAEf;AAGD;IAAC,iBAAI,EAAC,QAAQ,CAAC;IACP,uCAAO,GAAE;;;;4CAOhB;AAxBU,cAAc;IAD1B,uBAAU,EAAC,MAAM,CAAC;iEAEY,0BAAW,oBAAX,0BAAW;GAD7B,cAAc,CAyB1B;AAzBY,wCAAc;;;;;;;;;;;;ACN3B,2DAAmD;AACnD,+DAAyC;AACzC,uDAA2C;AAGpC,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,+BAAgB,EAAC,yBAAQ,EAAE,WAAW,CAAC;IAC5E;QACE,KAAK,CAAC;YACJ,aAAa,EAAE,UAAU;YACzB,aAAa,EAAE,UAAU;SAC1B,CAAC;IACJ,CAAC;IAEK,QAAQ,CAAC,QAAgB,EAAE,QAAgB;;YAC/C,OAAO;gBACL,YAAY,EAAE,QAAQ;gBACtB,aAAa,EAAE,QAAQ;aACxB;QACH,CAAC;KAAA;CACF;AAdY,iBAAiB;IAD7B,uBAAU,GAAE;;GACA,iBAAiB,CAc7B;AAdY,8CAAiB;;;;;;;;;;;;ACL9B,2DAA4C;AAC5C,uDAA2C;AAGpC,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,wBAAS,EAAC,WAAW,CAAC;CAAG;AAApD,kBAAkB;IAD9B,uBAAU,GAAE;GACA,kBAAkB,CAAkC;AAApD,gDAAkB;;;;;;;;;;;;;ACJ/B,uDAAwF;AACxF,yGAA2D;AAGpD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAGtC,GAAG,CAAQ,GAAQ;;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;QACnD,CAAC;KAAA;IAGK,GAAG,CAAQ,GAAQ,EAAU,MAAW;;YAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;QAChD,CAAC;KAAA;IAGK,IAAI,CAAQ,GAAQ,EAAU,MAAW;;YAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;QACjD,CAAC;KAAA;IAIK,MAAM,CAAQ,GAAQ;;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;KAAA;CACF;AAnBO;IADL,gBAAG,EAAC,EAAE,CAAC;IACG,mCAAG,GAAE;;;;yCAEf;AAGK;IADL,gBAAG,EAAC,EAAE,CAAC;IACG,mCAAG,GAAE;IAAY,oCAAI,GAAE;;;;yCAEjC;AAGK;IADL,iBAAI,EAAC,EAAE,CAAC;IACG,mCAAG,GAAE;IAAY,oCAAI,GAAE;;;;0CAElC;AAIK;IAFL,mBAAM,EAAC,EAAE,CAAC;IACV,qBAAQ,EAAC,GAAG,CAAC;IACA,mCAAG,GAAE;;;;4CAElB;AAtBU,cAAc;IAD1B,uBAAU,EAAC,QAAQ,CAAC;iEAEU,0BAAW,oBAAX,0BAAW;GAD7B,cAAc,CAuB1B;AAvBY,wCAAc;;;;;;;;;;;ACJ3B,qDAAuD;AACvD,qHAAuE;AAEvE,qFAA4D;AAC5D,+GAAgE;AAChE,qFAA8D;AAC9D,yGAA0D;AAE7C,0BAAkB,GAAG,IAAI,2BAAe,CAAC,CAAC,IAAqB,EAAE,EAAE;IAC9E,+BAAW,EAAC,IAAI,EAAE,6BAAa,EAAE,0BAAW,CAAC;IAC7C,+BAAW,EAAC,IAAI,EAAE,6BAAa,EAAE,8BAAa,CAAC;IAC/C,IAAI,CAAC,qCAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE;IACnD,IAAI,CAAwC,4BAA4B,CAAC,CAAC,SAAS,CAGjF,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,CAAiB,EAAE,EAAE;YAC3B,MAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,qCAAiB,CAAC;YAC5D,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,OAAO,WAAW;QACpB,CAAC;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;ACtBF,0GAAqC;AACrC,2GAAsC;AACtC,wHAAmD;AAEnD,qHAAgD;AAChD,iHAA4C;AAE5C,kHAA6C;;;;;;;;;;;;;ACP7C,qDAA8C;AAC9C,qFAAmE;AACnE,qFAA0D;AAC1D,8DAA2B;AAG3B;;;GAGG;AAEI,IAAM,WAAW,mBAAjB,MAAM,WAAW;IAGtB,YACsC,MAAW,EACpB,aAA8C;QADrC,WAAM,GAAN,MAAM,CAAK;QAG/C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,aAAW,CAAC,IAAI,CAAC;IAC/C,CAAC;IAEO,cAAc,CAAC,MAAc;QACnC,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAA4B,EAAE,GAAW,EAAE,EAAE;YAC5E,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI;YACf,OAAO,GAAG;QACZ,CAAC,EAAE,EAAE,CAAC;IACR,CAAC;IAED,GAAG,CAAC,QAAgB,EAAE,KAA0B;QAC9C,MAAM,GAAG,GAAG,6BAAS,EAAC,QAAQ,CAAC;QAC/B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,OAAO,EAAE;SACV;aAAM;YACL,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAE1D,MAAM,OAAO,GAAwB,EAAE;YACvC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;gBAC7B,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;oBAC/C,OAAO,CAAC,GAAG,CAAC,GAAG;wBACb,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;qBAC/C;gBACH,CAAC,CAAC;aACH;YAED,WAAW;YACX,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,6DAA6D;gBAC7D,aAAa;gBACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC;oBACtC,KAAK,EAAE;wBACL,EAAE,EAAE,EAAE;qBACP;oBACD,MAAM,EAAE,MAAM;iBACf,CAAC;aACH;iBAAM;gBACL,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClB,gCAAgC;oBAChC,MAAM,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;oBACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,WAAW,CAAC;oBACvC,6DAA6D;oBAC7D,aAAa;oBACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;wBACpC,KAAK,EAAE;4BACL,CAAC,GAAG,SAAS,CAAC,QAAQ,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE;4BACzC,SAAS,EAAE,KAAK;yBACjB;wBACD,MAAM,kCAAO,MAAM,GAAK,OAAO,CAAE;qBAClC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,QAAQ,WAAW,CAAC;oBAC7C,6DAA6D;oBAC7D,aAAa;oBACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;wBACpC,KAAK,EAAE;4BACL,iBAAiB;4BACjB,SAAS,EAAE,KAAK;yBACjB;wBACD,MAAM,EAAE,MAAM;qBACf,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAEK,GAAG,CAAC,IAAY,EAAE,MAAW;;YACjC,MAAM,GAAG,GAAG,6BAAS,EAAC,IAAI,CAAC;YAC3B,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5C,6DAA6D;YAC7D,aAAa;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE,EAAE,EAAE,EAAE;gBACb,IAAI,EAAE,MAAM;aACb,CAAC;QACJ,CAAC;KAAA;IAEK,IAAI,CAAC,IAAY,EAAE,MAAW;;YAClC,MAAM,GAAG,GAAG,6BAAS,EAAC,IAAI,CAAC;YAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YACxC,6DAA6D;YAC7D,aAAa;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;gBAClC,IAAI,EAAE,MAAM;aACb,CAAC;QACJ,CAAC;KAAA;IAEK,MAAM,CAAC,IAAY;;YACvB,MAAM,GAAG,GAAG,6BAAS,EAAC,IAAI,CAAC;YAC3B,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5C,6DAA6D;YAC7D,aAAa;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE;oBACL,EAAE;iBACH;gBACD,IAAI,EAAE;oBACJ,SAAS,EAAE,IAAI;iBAChB;aACF,CAAC;QACJ,CAAC;KAAA;CACF;AA7GY,WAAW;IADvB,0BAAU,GAAE;IAKR,yCAAM,EAAC,kCAAkB,CAAC;IAC1B,yCAAM,EAAC,iBAAiB,CAAC;;GALjB,WAAW,CA6GvB;AA7GY,kCAAW;;;;;;;;;;;ACXxB,yCAAuB;AACvB,wEAAwE;AACxE,kDAAkD;AAClD,8BAA8B;AAC9B,SAAgB,IAAI,CAAC,MAAW;IAC9B,OAAO,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAChE,CAAC;AAFD,oBAEC;;;;;;;;;;;;;ACLD,qDAA8C;AAG9C,qFAA6F;AAGtF,IAAM,aAAa,qBAAnB,MAAM,aAAa;IAGxB,YAC6B,aAA8C,EAEjE,kBAA4D,EAC7B,EAAO,EACP,GAAQ;QAFvC,uBAAkB,GAAlB,kBAAkB,CAA0C;QAC7B,OAAE,GAAF,EAAE,CAAK;QACP,QAAG,GAAH,GAAG,CAAK;QAE/C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,eAAa,CAAC,IAAI,CAAC;IACjD,CAAC;IAED,SAAS;QACP,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC/B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAQ,EAAE,CAAC,EAAE,EAAE;YAC1D,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBAClD,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC9C,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;aAC/C;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;aACnC;YACD,OAAO,GAAG;QACZ,CAAC,EAAE,EAAE,CAAC;QACN,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC;QAClC,OAAO,MAAM;IACf,CAAC;CACF;AA5BY,aAAa;IADzB,0BAAU,GAAE;IAKR,yCAAM,EAAC,iBAAiB,CAAC;IACzB,yCAAM,EAAC,4BAA4B,CAAC;IAEpC,yCAAM,EAAC,qCAAqB,CAAC;IAC7B,yCAAM,EAAC,qCAAqB,CAAC;;GARrB,aAAa,CA4BzB;AA5BY,sCAAa;;;;;;;;;;;;;ACP1B,yCAAuB;AACvB,qDAA8C;AAE9C,kEAAqE;AACrE,8DAA2B;AAM3B,qFAAsE;AACtE,oEAAiC;AAEpB,cAAM,GAAG,gBAAgB;AAG/B,IAAM,iBAAiB,yBAAvB,MAAM,iBAAiB;IAU5B,YAC6B,aAA8C,EAClC,SAAc;QAAd,cAAS,GAAT,SAAS,CAAK;QAP/C,qBAAgB,GAAQ,EAAE;QAC1B,iBAAY,GAAiC,EAAE;QAC/C,YAAO,GAAqC,EAAE;QAOpD,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,mBAAiB,CAAC,IAAI,CAAC;IACrD,CAAC;IAED,UAAU,CAAC,CAAiB;QAC1B,IAAI,CAAC,OAAO,GAAG,CAAC;IAClB,CAAC;IAED,WAAW,CAAC,UAAkB;QAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,MAAM,MAAM,GAAG,4BAA4B;YAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,GAAG,UAAU;QAE5B,IAAI,CAAC,UAAU,GAAG,gCAAY,EAAC,IAAI,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,EAAE;QAE7C,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE;QAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAmC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YACvE,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YAE5C,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,WAAW,EAAE,MAAM,CAAC,WAAW;oBAC/B,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,IAAI;oBACvC,IAAI,EAAE,CAAC;oBACP,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpB,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC1B,WAAW,EAAE,MAAM,CAAC,UAAU,GAAG,cAAM;iBACxC,CAAC;gBACF,OAAO,GAAG,EAAC,YAAY;aACxB;YAED,MAAM,CAAC,GAAmC,CAAC,CAAC,MAAM,CAChD,CAAC,CAAC,MAAM,CACN,EAAE,IAAI,EAAE,CAAC,EAAE,EACX;gBACE,IAAI,EAAE,CAAC;gBACP,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACjC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACnC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACjC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBACvD,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aACjC,CACF,EACD,CAAC,CAAC,WAAW,CACd;YACD,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,OAAO,GAAG;QACZ,CAAC,EAAE,EAAE,CAAC;QAEN,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;YAC5C,2BAA2B;YAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;gBAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC;gBACzE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YAC3B,CAAC,CAAC;SACH;QAED,OAAO,IAAI;IACb,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAM,CAAC,CAAC,CAAC,CAAC;QAC7C,OAAO;YACL,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACpC,WAAW,EAAE,IAAI,CAAC,UAAU;YAC5B,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,IAAI;YACtD,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc;YACpD,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY;YAChD,mBAAmB,EACjB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,IAAI,IAAI;gBAC/C,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,KAAK,MAAM;YAC1D,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,kBAAkB;gBAC1D,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC;gBACrD,CAAC,CAAC,SAAS;YACb,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC;IACH,CAAC;IAES,KAAK,CAAC,CAAS;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,GAAG,QAAQ;QACrC,MAAM,GAAG,GAAG,gCAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,GAAG;QAEzD,OAAO;YACL,UAAU,EAAE,MAAM,CAAC,SAAS;YAC5B,WAAW;YACX,YAAY;YACZ,cAAc;SACf;IACH,CAAC;IAES,aAAa;QACrB,gBAAgB;QAChB,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,OAA0B,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YAClF,MAAM,IAAI,GAAI,IAAI,CAAC,OAA0B,CAAC,KAAK,CAAC,GAAG,CAAC;YACxD,OAAO,CACL,GAAG,KAAK,QAAQ;gBAChB,CAAC,CAAC,IAAI,YAAY,OAAC,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC;gBACtE,CAAC,CAAC,IAAI,YAAY,OAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC,CACrE;QACH,CAAC,CAAC;QACF,OAAO,UAAU;IACnB,CAAC;IAES,cAAc;QACtB,IAAI,CAAC,UAAU,EAAE;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO;QAC1C,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY;QACpC,IAAI,MAAM,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjD,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC;SAC/B;aAAM;YACL,IAAI,MAAM,KAAK,KAAK,EAAE;gBACpB,OAAO,gCAAY,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC9C;;gBAAM,OAAO,EAAE;SACjB;IACH,CAAC;IAES,UAAU;QAClB,uBAAuB;QACvB,0BAA0B;QAC1B,iCAAiC;QACjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC;SAC7B;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC;IAC/E,CAAC;IAES,aAAa,CAAC,CAAS;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,QAAQ,EAAE;YACpC,OAAO,MAAM,CAAC,KAAK;SACpB;aAAM;YACL,IAAI,CAAC,KAAK,WAAW,EAAE;gBACrB,OAAO,MAAM;aACd;YACD,IAAI,CAAC,KAAK,WAAW,EAAE;gBACrB,OAAO,MAAM;aACd;YACD,OAAM;SACP;IACH,CAAC;IAES,YAAY,CAAC,CAAS;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,EAAE;YAC1C,OAAO,MAAM,CAAC,WAAW;SAC1B;aAAM;YACL,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,KAAK,WAAW,IAAI,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;gBACrF,OAAO,WAAW;aACnB;iBAAM;gBACL,OAAM;aACP;SACF;IACH,CAAC;IAES,YAAY,CAAC,CAAS;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC9B,OAAO,KAAK;SACb;aAAM,IAAI,MAAM,CAAC,aAAa,EAAE;YAC/B,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,aAAa;SACnC;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI;IACrD,CAAC;IAEO,YAAY,CAAC,CAAS;QAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACnC,OAAM;SACP;QACD,MAAM,UAAU,GAAwC,EAAE;QAC1D,IACE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC5C,CAAC,MAAM,CAAC,QAAQ;YAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EACxC;YACA,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACpC;QACD,OAAO,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;IACzD,CAAC;IAEO,QAAQ,CAAC,CAAS;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC9B,OAAO;gBACL,cAAc,EAAE,MAAM,CAAC,IAAI;aAC5B;SACF;aAAM;YACL,OAAM;SACP;IACH,CAAC;CACF;AAxNY,iBAAiB;IAD7B,0BAAU,GAAE;IAYR,yCAAM,EAAC,iBAAiB,CAAC;IACzB,yCAAM,EAAC,qCAAqB,CAAC;;GAZrB,iBAAiB,CAwN7B;AAxNY,8CAAiB;;;;;;;;;;;AChB9B,qDAAuD;AACvD,uDAAsD;AAEzC,8BAAsB,GAAG,IAAI,2BAAe,CAAC,CAAC,IAAqB,EAAE,EAAE;IAClF,IAAI,CAAoC,iBAAiB,CAAC,CAAC,SAAS,CAClE,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,EAAE;YACZ,OAAO,IAAI,eAAM,CAAC,IAAI,CAAC;QACzB,CAAC;IACH,CAAC,CACF;AACH,CAAC,CAAC;;;;;;;;;;;ACXF,mHAAyC;;;;;;;;;;;ACAzC,sGAAiC;AACjC,oGAA+B;AAC/B,sGAAiC;AACjC,gGAA2B;;;;;;;;;;;ACD3B,SAAgB,WAAW,CACzB,IAAqB,EACrB,iBAAkD,EAClD,WAAwC;IAExC,IAAI,CAAI,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE;IAChD,IAAI,CAAI,iBAAiB,CAAC,CAAC,SAAS,CAAI,CAAC,OAA2B,EAAE,EAAE;QACtE,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAI,WAAW,CAAgC;IAC7E,CAAC,CAAC;AACJ,CAAC;AATD,kCASC;;;;;;;;;;;ACXD,iFAAuC;AAGvC,SAAgB,WAAW,CAAC,iBAA4B;IACtD,OAAO,iBAAiB,CAAC,MAAM,CAAC,qBAAa,CAAC,CAAC,GAAG,CAAC,CAAC,OAAY,EAAE,EAAE;QAClE,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,WAAW;YAC5B,QAAQ,EAAE,OAAO;SAClB;IACH,CAAC,CAAC;AACJ,CAAC;AAPD,kCAOC;;;;;;;;;;;;ACVD,oEAAiC;AACjC,8DAA2B;AAE3B,MAAM,GAAG,GAAG,gCAAgC;AAE5C,SAAgB,SAAS,CAAC,IAAY;IAMpC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC3B,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YACtC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjC,OAAO;gBACL,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,cAAc,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,gBAAgB;gBAChF,MAAM,EAAE,QAAQ;gBAChB,EAAE;aACH;QACH,CAAC,CAAC;QACF,OAAO,IAAI;KACZ;SAAM;QACL,OAAO,EAAE;KACV;AACH,CAAC;AAtBD,8BAsBC;;;;;;;;;;;AC3BY,0BAAkB,GAAG,MAAM,CAAC,cAAc,CAAC;AACxD;;;GAGG;AACU,qBAAa,GAAG,MAAM,CAAC,SAAS,CAAC;AAEjC,6BAAqB,GAAG,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC;AACrD,6BAAqB,GAAG,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC;AAClE,MAAa,WAAY,SAAQ,KAAK;IAGpC,YAAY,SAAiB,EAAE,OAAe,EAAE,SAAe;QAC7D,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;IACzE,CAAC;CACF;AAPD,kCAOC;;;;;;;;;;;;AChBD,kEAA2D;AAC3D,yCAAuB;AAEvB,sCAAoB,EAAC,OAAC,CAAC;AAEvB,6FAA2B;AAC3B,iGAAiC;;;;;;;;;;;ACNjC,yCAAwB;AAGxB,yCAAyC;AACzC,mBAAmB;AACnB,yCAAyC;AAGzC,yCAAyC;AACzC,QAAQ;AACR,yCAAyC;AAE5B,uCAA+B,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC;AAErG,uDAA+C,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,UAAU,EAAC,YAAY,CAAC,CAAC,CAAC;AAE7H,mDAA2C,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,QAAQ,EAAC,mBAAmB,CAAC,CAAC,CAAC;AAE9H,uBAAe,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC,CAAC;AAEzC,uCAA+B,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAC,eAAe,EAAC,gBAAgB,EAAC,cAAc,CAAC,CAAC,CAAC;AAE9G,wCAAgC,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,QAAQ,EAAC,UAAU,CAAC,CAAC,CAAC;AAE1G,iCAAyB,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,EAAC,WAAW,EAAC,WAAW,EAAC,UAAU,EAAC,gBAAgB,EAAC,oBAAoB,EAAC,QAAQ,CAAC,CAAC,CAAC;AAEzI,wBAAgB,GAAG,OAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,WAAW,CAAC,CAAC,CAAC;AAI/D,yCAAyC;AACzC,SAAS;AACT,yCAAyC;AAEzC,yCAAyC;AACzC,mCAAmC;AACnC,yCAAyC;AAE5B,oCAA4B,GAAG,OAAC,CAAC,MAAM,CAAC;IACnD,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,OAAO,EAAE;IACtB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;IAClB,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE;CAC9B,CAAC;AAIF,yCAAyC;AACzC,wCAAwC;AACxC,yCAAyC;AAE5B,wCAAgC,GAAG,OAAC,CAAC,MAAM,CAAC;IACvD,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,OAAO,EAAE;IACtB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE;CACvB,CAAC;AAIF,yCAAyC;AACzC,qBAAqB;AACrB,yCAAyC;AAE5B,wBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC;IACvC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,OAAO,EAAE;IACtB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;CACnB,CAAC,CAAC,OAAO,CAAC,EAAC,cAAc,EAAC,MAAM,EAAC,CAAC;AAInC,yCAAyC;AACzC,cAAc;AACd,yCAAyC;AAE5B,kBAAU,GAAG,OAAC,CAAC,MAAM,CAAC;IACjC,MAAM,EAAE,wBAAgB;IACxB,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACjC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;IAC1B,kBAAkB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC1C,CAAC;AAaW,+BAAuB,GAAqB,kBAAU,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,CAAC;IACjF,OAAO,EAAE,OAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,sCAA8B,CAAC,CAAC,QAAQ,EAAE;CACjE,CAAC,CAAC;AAEH,yCAAyC;AACzC,sBAAsB;AACtB,yCAAyC;AAE5B,yBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,IAAI,EAAE;IACnB,SAAS,EAAE,OAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACjC,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC;AAaW,sCAA8B,GAAqB,yBAAiB,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,CAAC;IAC/F,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,+BAAuB,CAAC;CAC5C,CAAC,CAAC;;;;;;;;;;;ACvIH,kEAA2D;AAC3D,yCAAuB;AAEvB,sCAAoB,EAAC,OAAC,CAAC;AACvB,uGAAmC;AACnC,gGAA4B;AAC5B,2GAAuC;AACvC,2GAAuC;;;;;;;;;;;ACPvC,oDAAoD;AACpD,qFAA4D;AAE5D,IAAiB,SAAS,CAMzB;AAND,WAAiB,SAAS;IACxB,MAAa,SAAU,SAAQ,2BAAW;QACxC;YACE,KAAK,CAAC,IAAI,EAAE,YAAY,CAAC;QAC3B,CAAC;KACF;IAJY,mBAAS,YAIrB;AACH,CAAC,EANgB,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAMzB;;;;;;;;;;;ACTD,+EAAgG;AAChG,qFAAqD;AACrD,yCAAuB;AAEV,gCAAwB,GAAG,6BAAgB,CAAC,IAAI,CAAC;IAC5D,SAAS,EAAE,IAAI;CAChB,CAAC,CAAC,MAAM,CAAC;IACR,qBAAqB;IACrB,MAAM,EAAE,wBAAI,EAAC;QACX,OAAO,EAAE,kBAAkB;KAC5B,CAAC;CACH,CAAC;AAEW,0BAAkB,GAAG,OAAC;KAChC,MAAM,CAAC;IACN,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IACrB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,OAAO,EAAE,OAAC,CAAC,IAAI,EAAE;IACjB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,mBAAmB,EAAE,OAAC,CAAC,MAAM,EAAE;IAC/B,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE;IAC7B,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE;IAC7B,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC;KACD,OAAO,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;KACjC,MAAM,CAAC;IACN,qBAAqB;IACrB,MAAM,EAAE,wBAAI,EAAC;QACX,MAAM,EAAE,KAAK;KACd,CAAC;CACH,CAAC;AAES,gDAAwC,GAAG,6CAAgC,CAAC,IAAI,CAAC;IAC5F,SAAS,EAAE,IAAI;CAChB,CAAC,CAAC,MAAM,CAAC;IACR,qBAAqB;IACrB,MAAM,EAAE,wBAAI,EAAC;QACX,OAAO,EAAE,kCAAkC;KAC5C,CAAC;CACH,CAAC;;;;;;;;;;;;;ACxCF,qDAA8C;AAC9C,qFAAmE;AACnE,2EAAwC;AACxC,sEAAyB;AACzB,8DAA2B;AAE3B,MAAM,QAAQ,GAAG,mCAAmC;AAG7C,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,YAAgD,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;IAAG,CAAC;IAErE,GAAG,CAAC,MAAc;;YACtB,MAAM,GAAG,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,SAAS,MAAM,EAAE,CAAC;YACzD,MAAM,iBAAiB,GAAG,GAAG,CAAC,IAAI,CAAC,iBAAiB;YAEpD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC,UAAU,CAAC;gBAClE,KAAK,EAAE;oBACL,UAAU,EAAE,iBAAiB;iBAC9B;aACF,CAAC;YACF,IAAI,GAAG,EAAE;gBACP,OAAO;oBACL,MAAM,EAAE,MAAM;oBACd,UAAU,EAAE,iBAAiB;oBAC7B,QAAQ,EAAE,GAAG,CAAC,QAAQ;iBACvB;aACF;YACD,OAAO,SAAS;QAClB,CAAC;KAAA;IAEK,QAAQ,CAAC,MAAc,EAAE,IAAS;;YACtC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;YAC/B,6DAA6D;YAC7D,aAAa;YACb,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC5D,IAAI,EAAE,IAAI;aACX,CAAC;YACF,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,IAAI,CAC3B,QAAQ,GAAG,SAAS,MAAM,WAAW,EACrC,EAAE,EACF;oBACE,OAAO,EAAE;wBACP,cAAc,EAAE,kBAAkB;wBAClC,MAAM,EAAE,kBAAkB;qBAC3B;iBACF,CACF;aACF;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACjB;YAED,OAAO;gBACL,MAAM;gBACN,QAAQ;gBACR,IAAI;gBACJ,IAAI;aACL;QACH,CAAC;KAAA;CACF;AAnDY,WAAW;IADvB,0BAAU,GAAE;IAEE,yCAAM,EAAC,kCAAkB,CAAC;iEAAiB,EAAE,oBAAF,EAAE,CAAC,YAAY;GAD5D,WAAW,CAmDvB;AAnDY,kCAAW;;;;;;;;;;;;;ACTxB,qDAA8C;AAC9C,qFAAmE;AACnE,2EAAwC;AACxC,yCAAuB;AACvB,uDAAyC;AACzC,0FAA6C;AAC7C,mEAAgC;AAEnB,sBAAc,GAAG,OAAC,CAAC,MAAM,CAAC;IACrC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC;AAEF,MAAa,WAAY,SAAQ,6BAAY,EAAC,sBAAc,CAAC;CAAG;AAAhE,kCAAgE;AAGzD,IAAM,WAAW,GAAjB,MAAM,WAAW;IACtB,YAAgD,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;IAAG,CAAC;IAErE,QAAQ,CAAC,GAAgB;;YAC7B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC5C,KAAK,EAAE;oBACL,QAAQ,EAAE,GAAG,CAAC,QAAQ;iBACvB;aACF,CAAC;YACF,IAAI,IAAI;gBAAE,MAAM,IAAI,sBAAS,CAAC,SAAS,EAAE;YACzC,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC1D,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC1C,IAAI,EAAE;oBACJ,QAAQ,EAAE,GAAG,CAAC,QAAQ;oBACtB,cAAc,EAAE,cAAc;oBAC9B,kBAAkB,EAAE,IAAI;oBACxB,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,MAAM;iBAC7B;aACF,CAAC;YACF,OAAO;gBACL,EAAE,EAAE,KAAK,CAAC,EAAE;gBACZ,QAAQ,EAAE,KAAK,CAAC,QAAQ;aACzB;QACH,CAAC;KAAA;CACF;AAxBY,WAAW;IADvB,0BAAU,GAAE;IAEE,yCAAM,EAAC,kCAAkB,CAAC;iEAAiB,EAAE,oBAAF,EAAE,CAAC,YAAY;GAD5D,WAAW,CAwBvB;AAxBY,kCAAW;;;;;;;;;;;;AChBxB,qDAAuD;AACvD,qFAKuC;AACvC,+EAAgD;AAChD,sGAAsC;AACtC,mGAAqD;AACrD,mGAAqD;AAExC,wBAAgB,GAAG,IAAI,2BAAe,CAAC,CAAC,IAAqB,EAAE,EAAE;IAC5E,IAAI,CAAC,qCAAqB,CAAC,CAAC,eAAe,CAAC,eAAE,CAAC;IAC/C,IAAI,CAAC,qCAAqB,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC;IAEnD,+BAAW,EAAC,IAAI,EAAE,6BAAa,EAAE,0BAAW,CAAC;IAC7C,+BAAW,EAAC,IAAI,EAAE,6BAAa,EAAE,0BAAW,CAAC;AAC/C,CAAC,CAAC;;;;;;;;AClBF;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,uDAAuC;AACvC,mDAA0C;AAE1C,oEAA4C;AAC5C,6EAA6D;AAE7D,YAAY;AACZ,MAAM,eAAe,GAAG,0BAA0B;AAElD,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC;QAC/C,GAAG,CAAC,UAAU,EAAE;QAChB,MAAM,YAAY,GAAG,KAAK;QAC1B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC;QACjC,kBAAkB;QAClB,GAAG,CAAC,GAAG,CACL,2BAA2B,EAC3B,iDAAqB,EAAC;YACpB,MAAM,EAAE,eAAe;YACvB,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE;gBACX,CAAC,eAAe,CAAC,EAAE,EAAE;aACtB;SACF,CAAC,CACH;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;QACrC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;QACtB,eAAM,CAAC,GAAG,CAAC,kDAAkD,IAAI,IAAI,YAAY,EAAE,CAAC;IACtF,CAAC;CAAA;AAED,SAAS,EAAE","sources":["webpack://@flowda-projects/wms-api/./src/app/app.controller.ts","webpack://@flowda-projects/wms-api/./src/app/app.module.ts","webpack://@flowda-projects/wms-api/./src/app/task.controller.ts","webpack://@flowda-projects/wms-api/./src/loadModule.ts","webpack://@flowda-projects/wms-api/./src/services/services.module.ts","webpack://@flowda-projects/wms-api/./src/user/user.controller.ts","webpack://@flowda-projects/wms-api/./src/user/userLocal.strategy.ts","webpack://@flowda-projects/wms-api/./src/user/userLocalAuth.guard.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/controllers/data.controller.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/flowdaEngine.module.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/index.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/services/data/data.service.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/services/schema/meta.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/services/schema/schema.service.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-engine/src/services/schema/schemaTransformer.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared-node/src/flowdaSharedNode.module.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared-node/src/index.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared/src/index.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared/src/lib/bindService.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared/src/lib/getServices.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared/src/lib/matchPath.ts","webpack://@flowda-projects/wms-api/../../libs/flowda-shared/src/lib/types.ts","webpack://@flowda-projects/wms-api/../../libs/prisma-wms/src/index.ts","webpack://@flowda-projects/wms-api/../../libs/prisma-wms/src/zod/index.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/index.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/lib/error-code.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/lib/schema.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/services/task.service.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/services/user.service.ts","webpack://@flowda-projects/wms-api/../../libs/wms-services/src/wmsService.module.ts","webpack://@flowda-projects/wms-api/external commonjs \"@anatine/zod-openapi\"","webpack://@flowda-projects/wms-api/external commonjs \"@nestjs/common\"","webpack://@flowda-projects/wms-api/external commonjs \"@nestjs/core\"","webpack://@flowda-projects/wms-api/external commonjs \"@nestjs/passport\"","webpack://@flowda-projects/wms-api/external commonjs \"@prisma/client-wms\"","webpack://@flowda-projects/wms-api/external commonjs \"axios\"","webpack://@flowda-projects/wms-api/external commonjs \"bcrypt\"","webpack://@flowda-projects/wms-api/external commonjs \"http-proxy-middleware\"","webpack://@flowda-projects/wms-api/external commonjs \"inversify\"","webpack://@flowda-projects/wms-api/external commonjs \"lodash\"","webpack://@flowda-projects/wms-api/external commonjs \"nestjs-zod\"","webpack://@flowda-projects/wms-api/external commonjs \"passport-local\"","webpack://@flowda-projects/wms-api/external commonjs \"pluralize\"","webpack://@flowda-projects/wms-api/external commonjs \"tslib\"","webpack://@flowda-projects/wms-api/external commonjs \"zod\"","webpack://@flowda-projects/wms-api/webpack/bootstrap","webpack://@flowda-projects/wms-api/./src/main.ts"],"sourcesContent":["import { Controller, Get, Post } from '@nestjs/common'\n\nimport { SchemaService } from '@flowda-projects/flowda-engine'\n\n@Controller('/apps')\nexport class AppController {\n  constructor(private readonly schemaService: SchemaService) {}\n\n  @Get('/__hi')\n  hi() {\n    return { hi: 'world' }\n  }\n\n  @Post('/getSchema')\n  getSchema() {\n    return this.schemaService.getSchema()\n  }\n}\n","import { Module } from '@nestjs/common'\n\nimport { AppController } from './app.controller'\nimport { ServicesModule } from '../services/services.module'\nimport { DataController } from '@flowda-projects/flowda-engine'\nimport { TaskController } from './task.controller'\nimport { UserController } from '../user/user.controller'\nimport { UserLocalStrategy } from '../user/userLocal.strategy'\n\n@Module({\n  imports: [ServicesModule],\n  controllers: [AppController, DataController, TaskController, UserController],\n  providers: [UserLocalStrategy],\n})\nexport class AppModule {}\n","import { Body, Controller, Get, Param, Post } from '@nestjs/common'\nimport { TaskService } from '@flowda-projects/wms-services'\n\n@Controller('/tasks')\nexport class TaskController {\n  constructor(private readonly taskService: TaskService) {}\n\n  @Get('/:taskId/form')\n  getTaskForm(@Param('taskId') taskId: string) {\n    return this.taskService.get(taskId)\n  }\n\n  @Post('/:taskId/complete')\n  completeTask(@Param('taskId') taskId: string, @Body() body: any) {\n    return this.taskService.complete(taskId, body)\n  }\n}\n","import { interfaces } from 'inversify'\nimport { flowdaEngineModule } from '@flowda-projects/flowda-engine'\nimport { wmsServiceModule } from '@flowda-projects/wms-services'\nimport { PrismaClient } from '@prisma/client-wms'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport { flowdaSharedNodeModule } from '@flowda-projects/flowda-shared-node'\n\nconst prisma = new PrismaClient()\n\nexport function loadModule(container: interfaces.Container) {\n  container.bind<PrismaClient>(PrismaClientSymbol).toConstantValue(prisma)\n\n  container.load(flowdaSharedNodeModule)\n  container.load(flowdaEngineModule)\n  container.load(wmsServiceModule)\n}\n","import { Global, Module } from '@nestjs/common'\nimport { Container } from 'inversify'\nimport { getServices } from '@flowda-projects/flowda-shared'\nimport { loadModule } from '../loadModule'\n\nexport const servicesContainer = new Container()\nloadModule(servicesContainer)\n\nconst services = getServices(servicesContainer)\n\n@Global()\n@Module({\n  providers: services,\n  exports: services,\n})\nexport class ServicesModule {\n  constructor() {}\n}\n","import { Body, Controller, Post, Request, UseGuards, UsePipes } from '@nestjs/common'\nimport { UserLocalAuthGuard } from './userLocalAuth.guard'\nimport { RegisterDto, UserService } from '@flowda-projects/wms-services'\nimport { ZodValidationPipe } from 'nestjs-zod'\n\n@Controller('user')\nexport class UserController {\n  constructor(private service: UserService) {}\n\n  @Post('register')\n  @UsePipes(ZodValidationPipe)\n  register(@Body() dto: RegisterDto) {\n    return this.service.register(dto)\n  }\n\n  @UseGuards(UserLocalAuthGuard)\n  @Post('login')\n  login(@Request() req) {\n    return req.user\n  }\n\n  //   @UseGuards(UserJwtAuthGuard)\n  @Post('logout')\n  logout(@Request() req) {\n    // 客户端清空 token\n    // 服务端清空 refresh token\n    // 暂时不做 blacklist access_token 失效时间 10min\n    return {\n      success: true,\n    }\n  }\n}\n","import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class UserLocalStrategy extends PassportStrategy(Strategy, 'userLocal') {\n  constructor() {\n    super({\n      usernameField: 'username',\n      passwordField: 'password',\n    })\n  }\n\n  async validate(username: string, password: string) {\n    return {\n      access_token: username,\n      refresh_token: password,\n    }\n  }\n}\n","import { AuthGuard } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class UserLocalAuthGuard extends AuthGuard('userLocal') {}\n","import { Body, Controller, Delete, Get, HttpCode, Post, Put, Req } from '@nestjs/common'\nimport { DataService } from '../services/data/data.service'\n\n@Controller('data/*')\nexport class DataController {\n  constructor(private service: DataService) {}\n\n  @Get('')\n  async get(@Req() req: any) {\n    return this.service.get(req.params[0], req.query)\n  }\n\n  @Put('')\n  async put(@Req() req: any, @Body() values: any) {\n    return this.service.put(req.params[0], values)\n  }\n\n  @Post('')\n  async post(@Req() req: any, @Body() values: any) {\n    return this.service.post(req.params[0], values)\n  }\n\n  @Delete('')\n  @HttpCode(200)\n  async remove(@Req() req: any) {\n    return this.service.remove(req.params[0])\n  }\n}\n","import { ContainerModule, interfaces } from 'inversify'\nimport { SchemaTransformer } from './services/schema/schemaTransformer'\nimport { z } from 'zod'\nimport { bindService } from '@flowda-projects/flowda-shared'\nimport { SchemaService } from './services/schema/schema.service'\nimport { ServiceSymbol } from '@flowda-projects/flowda-shared'\nimport { DataService } from './services/data/data.service'\n\nexport const flowdaEngineModule = new ContainerModule((bind: interfaces.Bind) => {\n  bindService(bind, ServiceSymbol, DataService)\n  bindService(bind, ServiceSymbol, SchemaService)\n  bind(SchemaTransformer).toSelf().inTransientScope()\n  bind<interfaces.Factory<SchemaTransformer>>('Factory<SchemaTransformer>').toFactory<\n    SchemaTransformer,\n    [any]\n  >(context => {\n    return (z: z.AnyZodObject) => {\n      const transformer = context.container.get(SchemaTransformer)\n      transformer.setZodType(z)\n      return transformer\n    }\n  })\n})\n","export * from './flowdaEngine.module'\nexport * from './services/schema/meta'\nexport * from './services/schema/schemaTransformer'\n\nexport * from './services/schema/schema.service'\nexport * from './services/data/data.service'\n\nexport * from './controllers/data.controller'\n","import { inject, injectable } from 'inversify'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport { matchPath } from '@flowda-projects/flowda-shared'\nimport * as _ from 'lodash'\nimport { LoggerService } from '@nestjs/common'\n\n/*\ntodo: 增加 reference_type 区分是如何做 nest\ne.g. Customer#weixinProfile 和 Order#customerId 的 nest 查询有区别\n */\n@injectable()\nexport class DataService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DataService.name)\n  }\n\n  private toPrismaSelect(fields: string) {\n    return fields.split(',').reduce((acc: Record<string, boolean>, cur: string) => {\n      acc[cur] = true\n      return acc\n    }, {})\n  }\n\n  get(pathname: string, query: Record<string, any>) {\n    const ret = matchPath(pathname)\n    if (ret.length === 0) {\n      return {}\n    } else {\n      const { resource, id } = ret[ret.length - 1]\n      const fields = this.toPrismaSelect(query.fields[resource])\n\n      const include: Record<string, any> = {}\n      if (!_.isEmpty(query.include)) {\n        query.include.split(',').forEach((inc: string) => {\n          include[inc] = {\n            select: this.toPrismaSelect(query.fields[inc]),\n          }\n        })\n      }\n\n      // 情况1：搜索单个\n      if (id != null) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        return this.prisma[resource].findUnique({\n          where: {\n            id: id,\n          },\n          select: fields,\n        })\n      } else {\n        if (ret.length > 1) {\n          // 情况1：根据前一个 resource id 搜索 list\n          const pResource = ret[ret.length - 2]\n          this.logger.log(`${resource}.findMany`)\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return this.prisma[resource].findMany({\n            where: {\n              [`${pResource.resource}Id`]: pResource.id,\n              isDeleted: false,\n            },\n            select: { ...fields, ...include },\n          })\n        } else {\n          this.logger.log(` ---- ${resource}.findMany`)\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return this.prisma[resource].findMany({\n            where: {\n              // todo: tenantId\n              isDeleted: false,\n            },\n            select: fields,\n          })\n        }\n      }\n    }\n  }\n\n  async put(path: string, values: any) {\n    const ret = matchPath(path)\n    const { resource, id } = ret[ret.length - 1]\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this.prisma[resource].update({\n      where: { id },\n      data: values,\n    })\n  }\n\n  async post(path: string, values: any) {\n    const ret = matchPath(path)\n    const { resource } = ret[ret.length - 1]\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this.prisma[resource].create({\n      data: values,\n    })\n  }\n\n  async remove(path: string) {\n    const ret = matchPath(path)\n    const { resource, id } = ret[ret.length - 1]\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return this.prisma[resource].update({\n      where: {\n        id,\n      },\n      data: {\n        isDeleted: true,\n      },\n    })\n  }\n}\n","import { z } from 'zod'\n// motor-admin JSON.parse(document.getElementById('app').dataset.schema)\n// todo: 目前尽量在后端定义，后续可以再开辟一条链路来储存 schema，并进行 merge\n// 当然如果后端定义链路保留，应该做成 decorator\nexport function meta(values: any) {\n  return z.unknown().optional().describe(JSON.stringify(values))\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol, PrismaZodSchemaSymbol } from '@flowda-projects/flowda-shared'\n\n@injectable()\nexport class SchemaService {\n  private readonly logger\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>')\n    private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(PrismaZodSchemaSymbol) private zt: any,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(SchemaService.name)\n  }\n\n  getSchema(): any {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema(k).toSchema()\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    console.timeEnd('generate schema')\n    return schema\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport { generateSchema as zodToOpenAPI } from '@anatine/zod-openapi'\nimport * as _ from 'lodash'\nimport {\n  IResourceAssociationSchema,\n  IResourceColumnSchema,\n  IResourceSchema,\n} from '@flowda-projects/flowda-types'\nimport { PrismaZodSchemaSymbol } from '@flowda-projects/flowda-shared'\nimport * as plur from 'pluralize'\n\nexport const SUFFIX = 'ResourceSchema'\n\n@injectable()\nexport class SchemaTransformer {\n  private readonly logger\n  private zodType?: z.AnyZodObject\n  private jsonSchema: any\n  private extendSchema: any\n  private modelLevelSchema: any = {}\n  private associations: IResourceAssociationSchema[] = []\n  private columns: Partial<IResourceColumnSchema>[] = []\n  private schemaName: string\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject(PrismaZodSchemaSymbol) private prismaZod: any,\n  ) {\n    this.logger = loggerFactory(SchemaTransformer.name)\n  }\n\n  setZodType(z: z.AnyZodObject) {\n    this.zodType = z\n  }\n\n  buildSchema(schemaName: string): SchemaTransformer {\n    if (!this.zodType) {\n      const errMsg = 'zodType is not initialized'\n      this.logger.error(errMsg)\n      throw new Error(errMsg)\n    }\n    this.schemaName = schemaName\n\n    this.jsonSchema = zodToOpenAPI(this.zodType)\n    this.modelLevelSchema = this.getModelSchema()\n\n    const props = this.getProperties()\n    this.columns = props.reduce<Partial<IResourceColumnSchema>[]>((acc, k) => {\n      const jsProp = this.jsonSchema.properties[k]\n\n      if (jsProp.type === 'array') {\n        this.associations.push({\n          foreign_key: jsProp.foreign_key,\n          model_name: jsProp.model_name,\n          primary_key: jsProp.primary_key || 'id',\n          name: k,\n          slug: _.snakeCase(k),\n          display_name: jsProp.title,\n          schema_name: jsProp.model_name + SUFFIX,\n        })\n        return acc // 不处理 array\n      }\n\n      const c: Partial<IResourceColumnSchema> = _.omitBy<Partial<IResourceColumnSchema>>(\n        _.assign(\n          { name: k },\n          {\n            name: k,\n            column_type: this.doColumnType(k),\n            format: this.doFormat(k),\n            display_name: this.doDisplayName(k),\n            access_type: this.doAccessType(k),\n            reference: jsProp.reference ? this.doRef(k) : undefined,\n            validators: this.doValidators(k),\n          },\n        ),\n        _.isUndefined,\n      )\n      acc.push(c)\n      return acc\n    }, [])\n\n    if (Array.isArray(this.extendSchema.columns)) {\n      // 合并 __meta.columns 和 cols\n      this.columns.forEach((c: any) => {\n        const f = this.extendSchema.columns.find((c1: any) => c1.name === c.name)\n        Object.assign(c, f || {})\n      })\n    }\n\n    return this\n  }\n\n  toSchema(): IResourceSchema {\n    const name = this.schemaName.split(SUFFIX)[0]\n    return {\n      name: name,\n      slug: plur.plural(_.snakeCase(name)),\n      schema_name: this.schemaName,\n      primary_key: this.modelLevelSchema.primary_key || 'id',\n      display_column: this.modelLevelSchema.display_column,\n      display_name: this.modelLevelSchema.display_name,\n      display_primary_key:\n        this.modelLevelSchema.display_primary_key == null\n          ? true\n          : this.modelLevelSchema.display_primary_key === 'true',\n      searchable_columns: this.modelLevelSchema.searchable_columns\n        ? this.modelLevelSchema.searchable_columns.split(',')\n        : undefined,\n      columns: this.columns,\n      associations: this.associations,\n    }\n  }\n\n  protected doRef(k: string) {\n    const jsProp = this.jsonSchema.properties[k]\n    const t = jsProp.reference + 'Schema'\n    const ref = zodToOpenAPI(this.prismaZod[t])\n    const { primary_key, display_name, display_column } = ref\n\n    return {\n      model_name: jsProp.reference,\n      primary_key,\n      display_name,\n      display_column,\n    }\n  }\n\n  protected getProperties() {\n    // 拿到最大的 columns\n    const properties = Object.keys((this.zodType as z.AnyZodObject).shape).filter(key => {\n      const item = (this.zodType as z.AnyZodObject).shape[key]\n      return (\n        key !== '__meta' &&\n        !(item instanceof z.ZodDefault || item._def.typeName === 'ZodDefault') &&\n        !(item instanceof z.ZodNever || item._def.typeName === 'ZodDefault')\n      )\n    })\n    return properties\n  }\n\n  protected getModelSchema() {\n    this.checkValid()\n    const _extends = this.extendSchema.extends\n    const { prisma } = this.extendSchema\n    if (prisma !== false && !this.prismaZod[_extends]) {\n      throw new Error('no _extends')\n    } else {\n      if (prisma !== false) {\n        return zodToOpenAPI(this.prismaZod[_extends])\n      } else return {}\n    }\n  }\n\n  protected checkValid() {\n    // 暂时认为必须有 __meta，简化下逻辑\n    // 现在 __meta 里必须定义 extends\n    // todo: support no prisma schema\n    if (!this.jsonSchema.properties.__meta) {\n      throw new Error('no __meta')\n    }\n    this.extendSchema = JSON.parse(this.jsonSchema.properties.__meta.description)\n  }\n\n  protected doDisplayName(k: string): string | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (typeof jsProp.title === 'string') {\n      return jsProp.title\n    } else {\n      if (k === 'createdAt') {\n        return '创建时间'\n      }\n      if (k === 'updatedAt') {\n        return '更新时间'\n      }\n      return\n    }\n  }\n\n  protected doAccessType(k: string): IResourceColumnSchema['access_type'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (typeof jsProp.access_type === 'string') {\n      return jsProp.access_type\n    } else {\n      if (k === 'createdAt' || k === 'updatedAt' || k === this.modelLevelSchema.primary_key) {\n        return 'read_only'\n      } else {\n        return\n      }\n    }\n  }\n\n  protected doColumnType(k: string): IResourceColumnSchema['column_type'] {\n    const jsProp = this.jsonSchema.properties[k]\n    if (Array.isArray(jsProp.enum)) {\n      return 'tag'\n    } else if (jsProp.override_type) {\n      jsProp.type = jsProp.override_type\n    }\n\n    return jsProp.reference ? 'reference' : jsProp.type\n  }\n\n  private doValidators(k: string): IResourceColumnSchema['validators'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (!jsProp) {\n      this.logger.warn('undef key: ' + k)\n      return\n    }\n    const validators: IResourceColumnSchema['validators'] = []\n    if (\n      ['createdAt', 'updatedAt'].indexOf(k) === -1 &&\n      !jsProp.nullable &&\n      this.jsonSchema.required.indexOf(k) > -1\n    ) {\n      validators.push({ required: true })\n    }\n    return validators.length === 0 ? undefined : validators\n  }\n\n  private doFormat(k: string): IResourceColumnSchema['format'] | undefined {\n    const jsProp = this.jsonSchema.properties[k]\n    if (Array.isArray(jsProp.enum)) {\n      return {\n        select_options: jsProp.enum,\n      }\n    } else {\n      return\n    }\n  }\n}\n","import { ContainerModule, interfaces } from 'inversify'\nimport { Logger, LoggerService } from '@nestjs/common'\n\nexport const flowdaSharedNodeModule = new ContainerModule((bind: interfaces.Bind) => {\n  bind<interfaces.Factory<LoggerService>>('Factory<Logger>').toFactory<LoggerService, [string]>(\n    context => {\n      return name => {\n        return new Logger(name)\n      }\n    },\n  )\n})\n","export * from './flowdaSharedNode.module'\n","export * from './lib/bindService'\nexport * from './lib/matchPath'\nexport * from './lib/getServices'\nexport * from './lib/types'\n","import { interfaces } from 'inversify'\n\nexport function bindService<T>(\n  bind: interfaces.Bind,\n  serviceIdentifier: interfaces.ServiceIdentifier<T>,\n  constructor: new (...args: never[]) => T,\n) {\n  bind<T>(constructor).toSelf().inSingletonScope()\n  bind<T>(serviceIdentifier).toFactory<T>((context: interfaces.Context) => {\n    return context.container.get<T>(constructor) as interfaces.SimpleFactory<T>\n  })\n}\n","import { ServiceSymbol } from './types'\nimport { Container } from 'inversify'\n\nexport function getServices(servicesContainer: Container) {\n  return servicesContainer.getAll(ServiceSymbol).map((service: any) => {\n    return {\n      provide: service.constructor,\n      useValue: service,\n    }\n  })\n}\n","import * as plur from 'pluralize'\nimport * as _ from 'lodash'\n\nconst REG = /(([a-z_]+s)\\/?([a-z0-9-]+)?)+/g\n\nexport function matchPath(path: string): Array<{\n  origin: string\n  resource: string\n  resourceSchema: string\n  id?: string\n}> {\n  const ret1 = path.match(REG)\n  if (ret1 != null) {\n    const ret2 = ret1.map(item => {\n      const [resource, id] = item.split('/')\n      const p = plur.singular(resource)\n      return {\n        resource: _.camelCase(p),\n        resourceSchema: _.startCase(_.camelCase(p)).replace(/ /g, '') + 'ResourceSchema',\n        origin: resource,\n        id,\n      }\n    })\n    return ret2\n  } else {\n    return []\n  }\n}\n","export const PrismaClientSymbol = Symbol('PrismaClient')\n/**\n * getServices 方法会将 inversify module 转换成 nestjs module，这样 nestjs controller 就可以使用了\n * 所以，注意：如果不需要给 controller 使用，则不需要 bind\n */\nexport const ServiceSymbol = Symbol('Service')\n\nexport const PrismaZodSchemaSymbol = Symbol.for('PrismaZodSchema')\nexport const CustomZodSchemaSymbol = Symbol.for('CustomZodSchema')\nexport class CustomError extends Error {\n  public message\n\n  constructor(errorCode: number, message: string, extraInfo?: any) {\n    super(JSON.stringify({ errorCode, message }))\n    this.message = JSON.stringify({ errorCode, message, extra: extraInfo })\n  }\n}\n","import { extendZodWithOpenApi } from '@anatine/zod-openapi'\nimport { z } from 'zod'\n\nextendZodWithOpenApi(z)\n\nexport * from './zod/index'\nexport * as zt from './zod/index'\n","import { z } from 'zod';\nimport type { Prisma } from '@prisma/client-wms';\n\n/////////////////////////////////////////\n// HELPER FUNCTIONS\n/////////////////////////////////////////\n\n\n/////////////////////////////////////////\n// ENUMS\n/////////////////////////////////////////\n\nexport const MemberInfoScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','name','gender']);\n\nexport const ResourceTaskDefKeyRelationScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','resource','taskDefKey']);\n\nexport const ResourceTaskIdRelationScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','taskId','processInstanceId']);\n\nexport const SortOrderSchema = z.enum(['asc','desc']);\n\nexport const TransactionIsolationLevelSchema = z.enum(['ReadUncommitted','ReadCommitted','RepeatableRead','Serializable']);\n\nexport const UserProfileScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','userId','fullName']);\n\nexport const UserScalarFieldEnumSchema = z.enum(['id','createdAt','updatedAt','isDeleted','username','hashedPassword','hashedRefreshToken','status']);\n\nexport const UserStatusSchema = z.enum(['ACTIVE','FORBIDDEN']);\n\nexport type UserStatusType = `${z.infer<typeof UserStatusSchema>}`\n\n/////////////////////////////////////////\n// MODELS\n/////////////////////////////////////////\n\n/////////////////////////////////////////\n// RESOURCE TASK ID RELATION SCHEMA\n/////////////////////////////////////////\n\nexport const ResourceTaskIdRelationSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  taskId: z.string(),\n  processInstanceId: z.string(),\n})\n\nexport type ResourceTaskIdRelation = z.infer<typeof ResourceTaskIdRelationSchema>\n\n/////////////////////////////////////////\n// RESOURCE TASK DEF KEY RELATION SCHEMA\n/////////////////////////////////////////\n\nexport const ResourceTaskDefKeyRelationSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  resource: z.string(),\n  taskDefKey: z.string(),\n})\n\nexport type ResourceTaskDefKeyRelation = z.infer<typeof ResourceTaskDefKeyRelationSchema>\n\n/////////////////////////////////////////\n// MEMBER INFO SCHEMA\n/////////////////////////////////////////\n\nexport const MemberInfoSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean(),\n  name: z.string(),\n  gender: z.string(),\n}).openapi({\"display_name\":\"成员信息\"})\n\nexport type MemberInfo = z.infer<typeof MemberInfoSchema>\n\n/////////////////////////////////////////\n// USER SCHEMA\n/////////////////////////////////////////\n\nexport const UserSchema = z.object({\n  status: UserStatusSchema,\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean().nullable(),\n  username: z.string(),\n  hashedPassword: z.string(),\n  hashedRefreshToken: z.string().nullable(),\n})\n\nexport type User = z.infer<typeof UserSchema>\n\n// USER RELATION SCHEMA\n//------------------------------------------------------\n\nexport type UserRelations = {\n  profile?: UserProfileWithRelations | null;\n};\n\nexport type UserWithRelations = z.infer<typeof UserSchema> & UserRelations\n\nexport const UserWithRelationsSchema: z.ZodObject<any> = UserSchema.merge(z.object({\n  profile: z.lazy(() => UserProfileWithRelationsSchema).nullable(),\n}))\n\n/////////////////////////////////////////\n// USER PROFILE SCHEMA\n/////////////////////////////////////////\n\nexport const UserProfileSchema = z.object({\n  id: z.number().int(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  isDeleted: z.boolean().nullable(),\n  userId: z.number().int(),\n  fullName: z.string(),\n})\n\nexport type UserProfile = z.infer<typeof UserProfileSchema>\n\n// USER PROFILE RELATION SCHEMA\n//------------------------------------------------------\n\nexport type UserProfileRelations = {\n  user: UserWithRelations;\n};\n\nexport type UserProfileWithRelations = z.infer<typeof UserProfileSchema> & UserProfileRelations\n\nexport const UserProfileWithRelationsSchema: z.ZodObject<any> = UserProfileSchema.merge(z.object({\n  user: z.lazy(() => UserWithRelationsSchema),\n}))\n","import { extendZodWithOpenApi } from '@anatine/zod-openapi'\nimport { z } from 'zod'\n\nextendZodWithOpenApi(z)\nexport * from './wmsService.module'\nexport * from './lib/schema'\nexport * from './services/task.service'\nexport * from './services/user.service'\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { CustomError } from '@flowda-projects/flowda-shared'\n\nexport namespace UserError {\n  export class UserExist extends CustomError {\n    constructor() {\n      super(1001, 'User exist')\n    }\n  }\n}\n","import { MemberInfoSchema, ResourceTaskDefKeyRelationSchema } from '@flowda-projects/prisma-wms'\nimport { meta } from '@flowda-projects/flowda-engine'\nimport { z } from 'zod'\n\nexport const MemberInfoResourceSchema = MemberInfoSchema.omit({\n  isDeleted: true,\n}).extend({\n  // motor-admin schema\n  __meta: meta({\n    extends: 'MemberInfoSchema',\n  }),\n})\n\nexport const TaskResourceSchema = z\n  .object({\n    id: z.string().cuid(),\n    name: z.string(),\n    assignee: z.string(),\n    created: z.date(),\n    executionId: z.string(),\n    processDefinitionId: z.string(),\n    processInstanceId: z.string(),\n    taskDefinitionKey: z.string(),\n    formLink: z.string(),\n  })\n  .openapi({ display_name: '任务列表' })\n  .extend({\n    // motor-admin schema\n    __meta: meta({\n      prisma: false,\n    }),\n  })\n\nexport const ResourceTaskDefKeyRelationResourceSchema = ResourceTaskDefKeyRelationSchema.omit({\n  isDeleted: true,\n}).extend({\n  // motor-admin schema\n  __meta: meta({\n    extends: 'ResourceTaskDefKeyRelationSchema',\n  }),\n})\n","import { inject, injectable } from 'inversify'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport * as db from '@prisma/client-wms'\nimport axios from 'axios'\nimport * as _ from 'lodash'\n\nconst REST_URL = 'http://localhost:8070/engine-rest'\n\n@injectable()\nexport class TaskService {\n  constructor(@inject(PrismaClientSymbol) private prisma: db.PrismaClient) {}\n\n  async get(taskId: string) {\n    const res = await axios.get(REST_URL + `/task/${taskId}`)\n    const taskDefinitionKey = res.data.taskDefinitionKey\n\n    const rel = await this.prisma.resourceTaskDefKeyRelation.findUnique({\n      where: {\n        taskDefKey: taskDefinitionKey,\n      },\n    })\n    if (rel) {\n      return {\n        taskId: taskId,\n        taskDefKey: taskDefinitionKey,\n        resource: rel.resource,\n      }\n    }\n    return undefined\n  }\n\n  async complete(taskId: string, body: any) {\n    const { resource, data } = body\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const ret1 = await this.prisma[_.lowerFirst(resource)].create({\n      data: data,\n    })\n    try {\n      const ret2 = await axios.post(\n        REST_URL + `/task/${taskId}/complete`,\n        {},\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n          },\n        },\n      )\n    } catch (e) {\n      console.error(e)\n    }\n\n    return {\n      taskId,\n      resource,\n      data,\n      ret1,\n    }\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { PrismaClientSymbol } from '@flowda-projects/flowda-shared'\nimport * as db from '@prisma/client-wms'\nimport { z } from 'zod'\nimport { createZodDto } from 'nestjs-zod'\nimport { UserError } from '../lib/error-code'\nimport * as bcrypt from 'bcrypt'\n\nexport const registerSchema = z.object({\n  username: z.string(),\n  password: z.string(),\n})\n\nexport class RegisterDto extends createZodDto(registerSchema) {}\n\n@injectable()\nexport class UserService {\n  constructor(@inject(PrismaClientSymbol) private prisma: db.PrismaClient) {}\n\n  async register(dto: RegisterDto) {\n    const user = await this.prisma.user.findFirst({\n      where: {\n        username: dto.username,\n      },\n    })\n    if (user) throw new UserError.UserExist()\n    const hashedPassword = await bcrypt.hash(dto.password, 10)\n    const aUser = await this.prisma.user.create({\n      data: {\n        username: dto.username,\n        hashedPassword: hashedPassword,\n        hashedRefreshToken: null,\n        status: db.UserStatus.ACTIVE,\n      },\n    })\n    return {\n      id: aUser.id,\n      username: aUser.username,\n    }\n  }\n}\n","import { ContainerModule, interfaces } from 'inversify'\nimport {\n  bindService,\n  CustomZodSchemaSymbol,\n  PrismaZodSchemaSymbol,\n  ServiceSymbol,\n} from '@flowda-projects/flowda-shared'\nimport { zt } from '@flowda-projects/prisma-wms'\nimport * as schema from './lib/schema'\nimport { TaskService } from './services/task.service'\nimport { UserService } from './services/user.service'\n\nexport const wmsServiceModule = new ContainerModule((bind: interfaces.Bind) => {\n  bind(PrismaZodSchemaSymbol).toConstantValue(zt)\n  bind(CustomZodSchemaSymbol).toConstantValue(schema)\n\n  bindService(bind, ServiceSymbol, TaskService)\n  bindService(bind, ServiceSymbol, UserService)\n})\n","module.exports = require(\"@anatine/zod-openapi\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@prisma/client-wms\");","module.exports = require(\"axios\");","module.exports = require(\"bcrypt\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"inversify\");","module.exports = require(\"lodash\");","module.exports = require(\"nestjs-zod\");","module.exports = require(\"passport-local\");","module.exports = require(\"pluralize\");","module.exports = require(\"tslib\");","module.exports = require(\"zod\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app/app.module'\nimport { createProxyMiddleware } from 'http-proxy-middleware'\n\n// todo: 先写死\nconst API_SERVICE_URL = 'http://c7.jp1.flowda.cn/'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n  app.enableCors()\n  const globalPrefix = 'api'\n  app.setGlobalPrefix(globalPrefix)\n  // Proxy endpoints\n  app.use(\n    '/api/camunda/engine-rest/',\n    createProxyMiddleware({\n      target: API_SERVICE_URL,\n      changeOrigin: true,\n      pathRewrite: {\n        [`^/api/camunda`]: '',\n      },\n    }),\n  )\n\n  const port = process.env.PORT || 3344\n  await app.listen(port)\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`)\n}\n\nbootstrap()\n"],"names":[],"sourceRoot":""}